<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbia.sbiademo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.sbia.sbiademo.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="BIGINT" property="status" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <resultMap id="BaseMap2" type="com.sbia.sbiademo.model.UserWrapper" extends="BaseResultMap">
    <collection property="rList" columnPrefix="role_" resultMap="com.sbia.sbiademo.mapper.RoleMapper.BaseResultMap"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sbia.sbiademo.model.User">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user ( name, password,
      <if test="email!=null and email!=''">
        email,
      </if>
      <if test="createTime!=null and createTime!=''">
        create_time,
      </if>
      <if test="lastLoginTime!=null and lastLoginTime!=''">
        last_login_time,
      </if>
      <if test="status!=null and status!=''">
        status,
      </if>
      <if test="nickname!=null and nickname!=''">
        nickname,
      </if>
      salt
      )
    values ( #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      <if test="email!=null and email!=''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime!=null and createTime!=''">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime!=null and lastLoginTime!=''">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status!=null and status!=''">
        #{status,jdbcType=BIGINT},
      </if>
      <if test="nickname!=null and nickname!=''">
        #{nickname,jdbcType=VARCHAR},
      </if>
        #{salt,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sbia.sbiademo.model.User">
    update tb_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIGINT},
      nickname = #{nickname,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, password, email, create_time, last_login_time, status, nickname, 
    salt
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, email, create_time, last_login_time, status, nickname, 
    salt
    from tb_user
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, password, email, create_time, last_login_time, status, nickname,
      salt
    from tb_user where name=#{name}
  </select>
  <select id="selectPermisssionByUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT
      DISTINCT up.id
    FROM
      (
          (
              (
                  tb_user us
                  INNER JOIN u_user_role usr ON us.id = usr.uid
                )
              INNER JOIN u_role ur ON ur.id = usr.rid
            )
          INNER JOIN u_role_permission urp ON ur.id = urp.rid
        )
      INNER JOIN u_permission up ON up.id = urp.pid
    WHERE
      us.name = #{name}
  </select>
  <select id="selectIdByUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT
      COUNT(id)
    FROM
      tb_user
    WHERE
      NAME = #{name}
  </select>
  <select id="selectAll2" resultMap="BaseMap2">
    SELECT
      u.id,
      u.`name`,
      ur.id role_id,
      ur.`name` role_name
    FROM
      tb_user u
      LEFT JOIN u_user_role usr ON u.id = usr.uid
      LEFT JOIN u_role ur ON usr.rid = ur.id
  </select>
  <delete id="deleteRoleForUser">
    DELETE
    FROM
      u_user_role
    WHERE
      uid = #{id}
  </delete>
  <insert id="insertRoleForUser">
    INSERT INTO u_user_role (uid, rid)
    VALUES
      (#{uid}, #{rid})
  </insert>
</mapper>